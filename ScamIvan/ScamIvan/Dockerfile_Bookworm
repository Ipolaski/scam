# См. статью по ссылке https://aka.ms/customizecontainer, чтобы узнать как настроить контейнер отладки и как Visual Studio использует этот Dockerfile для создания образов для ускорения отладки.

# Этот этап используется при запуске из VS в быстром режиме (по умолчанию для конфигурации отладки)
FROM mcr.microsoft.com/dotnet/runtime:8.0-bookworm-slim-amd64 AS base
RUN apt-get update && \apt-get install -y \libappindicator3-1 \libatk1.0-0 \libasound2 \libgbm1 \libnss3 \libxss1 && \rm -rf /var/lib/apt/lists/*
USER app
WORKDIR /app
# Либы, которые рекомендовали включить, но они не влияют на ра
#  \wget \apt-transport-https  \ca-certificates \libxrandr2 \gnupg2 \fonts-liberation \libatk-bridge2.0-0 \xdg-utils \libxcb-dri3-0 \libcups2 \libdbus-1-3 \libgdk-pixbuf2.0-0 \libnspr4 \libx11-xcb1 \libxcomposite1 \libxdamage1 

# Этот этап используется для сборки проекта службы
FROM mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["ScamIvan/ScamIvan.csproj", "ScamIvan/"]
RUN dotnet restore "./ScamIvan/ScamIvan.csproj"
COPY . .
WORKDIR "/src/ScamIvan"
RUN dotnet build "./ScamIvan.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Этот этап используется для публикации проекта службы, который будет скопирован на последний этап
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./ScamIvan.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Этот этап используется в рабочей среде или при запуске из VS в обычном режиме (по умолчанию, когда конфигурация отладки не используется)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "ScamIvan.dll"]